{% extends 'base.html.twig' %}

{% block title %}Formulaire de création d'article{% endblock %}

{% block body%}

	{% if lieuDejaPrisForm is null %}

	{% else %}
		<h3> Erreur d'intégrité des donnés </h3>
		<p> {{lieuDejaPrisForm}} </p>
	{% endif %} 

	{% if lieuDejaPrisBd is null %}

	{% else %}
		<h3> Erreur d'intégrité des donnés </h3>
		<p> {{lieuDejaPrisBd}} </p>
	{% endif %}

	{% if erreurValidation is null %}

	{% else %}
		<h3> Erreur sur la validation du formulaire </h3>
		<ul>
		{% for error in erreurValidation %}
			<li>{{ error.message }}</li>
		{% endfor %}
        </ul>
	{% endif %}

	{% if erreurPeriode is null %}

	{% else %}
		<h3> Erreur d'intégrité des donnés </h3>
		<p> {{erreurPeriode}} </p>
	{% endif %}

	{% if editmode%}
		<h1> Modification d'un article ! </h1>
	{% else %}
		<h1> Création d'un article ! </h1>
	{% endif %}

	 {% form_theme formArticle 'bootstrap_4_layout.html.twig' %} 

	{{form_start(formArticle, { attr: { novalidate: 'novalidate' } })}}

	
	{{form_row(formArticle.brouillon)}}
	{{form_row(formArticle.titre , {'attr' : {'placeholder': "Titre de l'article"} ,  'label': "Titre"})}}
	{{form_row(formArticle.image, {'attr' : {'placeholder': "Url de l'image"},  'label': "Image"})}}
	{{form_row(formArticle.contenu, {'attr' : {'placeholder': "Contenu de l'article"},  'label': "Contenu"})}}
	

	{# on est obligé d'instancier le prototype ici à cause du form_widget du 1 er ul 
	{% set protoPeriode = form_widget(formArticle.evenements.vars.prototype.children['periode'].vars.prototype)|e('html_attr')  %}#}

	<ul class="evenements" data-prototype="{{form_widget(formArticle.evenements.vars.prototype)|e('html_attr')}}">
	
		{#<ul class="periodes" data-prototype="{{protoPeriode}}">
			
		</ul>#}
		{% set test =0 %}

		{% if editmode %}

			{% set test =1 %}

		{% endif %}

		{% for evenement in formArticle.evenements %}

			{# comme on peut charger un événement qui nous appartient pas , il faut faire en sorte
				que on ne puisse pas le modifier	 #}
			{#{{dump(evenement.vars.value.utilisateur)}}#}
			{#on va regarder si l'événement est déja relié à un utilisateur (sinon ca va faire planter la création d'article#}
			{#{{dump(evenement.vars.value.utilisateur.id)}}
			{{dump(formArticle.vars.value.utilisateur.id)}}#}
			{% if (is_granted('ROLE_ADMIN') or (test != 0 or evenement.vars.value.utilisateur.id == formArticle.vars.value.utilisateur.id)) %}			
				
				{% if test != 0 %}

					{{form_row(evenement.nom)}}
					{{form_row(evenement.image)}}
					{{form_row(evenement.description)}}
					{{form_row(evenement.domaine)}}

				{% endif %}
				<ul class="questions" data-prototype="{{ form_widget(evenement.questions.vars.prototype)|e('html_attr') }}">

					{% for question in evenement.questions %}
						{% if test != 0 %}

							{{form_row(question.contenu)}}

						{% endif %}	
						<ul class="reponses" data-prototype="{{ form_widget(question.reponses.vars.prototype)|e('html_attr') }}">
							{% for reponse in question.reponses %}

								{{form_row(reponse.contenu)}}

							{% endfor %}
						</ul>


					{% endfor %}

				</ul>
				<ul class="periodes" data-prototype="{{form_widget(evenement.periode.vars.prototype)|e('html_attr')}}">
					{% for periode in evenement.periode %}

						{{form_row(periode)}}

					{% endfor %}
			
				</ul>

				<ul class="organisateurs" data-prototype="{{form_widget(evenement.organisateurs.vars.prototype)|e('html_attr')}}">
					{% for organisateur in evenement.organisateurs %}

						{% if test != 0 %}

							{{form_row(organisateur.nom)}}
							{{form_row(organisateur.siteWeb)}}
							{{form_row(organisateur.mail)}}
							{{form_row(organisateur.image)}}

						{% endif %}

						<ul class="contacts" data-prototype="{{form_widget(organisateur.contacts.vars.prototype)|e('html_attr')}}">

							{#{% for contact in organisateur.contacts %}

								{{form_row(contact)}}
							
							{% endfor %}#}

							{% for listeContact in organisateur.vars["value"].listeContact %}
								
								
								{% if listeContact.evenement == evenement.vars["value"] %}
									{% for contact in listeContact.contact %}

										{#{{form_row(contact)}}#}
										
										

										{# contact est une entity et pas un formView , je ne sais pas comment générer le formView
										à partir du twig , donc pour l'instant on va récupérer le bon contact dans organisateurs.contacts
										qui est un formView
										#}

										{% for contact2 in organisateur.contacts %}

											{% if contact == contact2.vars["value"] %}

												{{form_row(contact2)}}

											{% endif %}

										{% endfor %}
				
									{% endfor %}

								{% endif %}

							{% endfor %}

						</ul>
					{% endfor %}
				</ul>

				{#<ul class="questions" data-prototype="{{ form_widget(evenement.questions.vars.prototype)|e('html_attr') }}">

					{% for question in evenement.questions %}

						{{form_row(question.contenu)}}

					{% endfor %}

				</ul>#}

				{% if test !=0 %}

					{{form_row(evenement.lieu)}}

				{% endif %}	

				{% set test = 1 %}
			{% else %}

				<h3> {{evenement.vars.value.nom}} a été écris par {{evenement.vars.value.utilisateur.prenom}} {{evenement.vars.value.utilisateur.nom}} </h3>
				<p> Vous ne pouver pas le modifier car vous n'étes pas administrateur ni l'auteur de l'événement. </p>
				<p>Si vous souhaiter le modifier , demander à un admnistrateur ou à l'auteur</p>
				
			{% endif %}

		{% endfor %}
		

	</ul>

	

	 {% if editmode%}
		<button type="submit" class="btn btn-success">Modifier</button> 
	{%else %}
		<button type="submit" class="btn btn-success">Créer</button> 
	{% endif %}

	

	{#{{form_end(formArticle)}}#}

	<script>
		//un code similaire est "commenté" dans form_evenement.html.twig
		var $collectionHolder;

		var $addEvenementButton = $('<button type="button" class="btn btn-success add_evenement_link">Ajouter un événement </button>');
        var $newLinkLi = $('<li></li>').append($addEvenementButton);
		

		jQuery(document).ready(function() {
			

			$collectionHolder = $('ul.evenements');
			console.log($collectionHolder);
			$collectionHolder.append($newLinkLi);

			$collectionHolder.data('index', $collectionHolder.find(':input').length);

			// *******************

			var $collectionHolderOrganisateur = $('ul.organisateurs');

			var tabUlOrganisateurs = [];
			var tabButtonOrganisateurs = [];
			var tabIndexEvenementOrganisateurs = [];
			var tabLinkOrganisateurs = [];

			var tabOrganisateursUlContacts = [[]];
			var tabOrganisateursButtonContacts = [[]];
			var tabOrganisateursIndexOrganisateurContacts = [[]];
			var tabOrganisateursLinkContacts = [[]];

			// on commence i à 1 car le 1er ul.organisateurs est bidon
			// voir le controller pour comprendre , il nous fallait un événement et un organisateur bidon
			// pour pouvoir rentrer dans les for au moin une fois et avoir accés aux ul

			var start = 1;
			var editmode = '{{editmode}}';
			if(editmode == true)
			{
				// si on est en mode édition , le 1er ul n'est pas bidon
				start = 0;
			}
			console.log("start = "+start);
			console.log(" editmode = "+editmode);
			for(var i =start; i < $collectionHolderOrganisateur.length ; i++)
			{
				var $collectionHolderOrganisateuri = $('ul.organisateurs:eq('+i+')');

				var $addOrgaButton = $('<button type="button" class="btn btn-success add_organisateur_link">Ajouter un organisteur</button>');
                var $newLinkLi3 = $('<li></li>').append($addOrgaButton);

				$collectionHolderOrganisateuri.append($newLinkLi3);

				// on va s'occuper des contacts 
				console.log("test1");
				var tabUlContacts = [];
				var tabButtonContacts = [];
				var tabIndexOrganisateurContacts = [];
				var tabLinkContacts = [];

				var $collectionHolderOrganisateuriContact = $collectionHolderOrganisateuri.find('ul.contacts')

				for(var j=0 ; j<$collectionHolderOrganisateuriContact.length ; j++)
				{
					var $collectionHolderOrganisateuriContactj = $('ul.organisateurs:eq('+i+') ul.contacts:eq('+j+')');

					var $addContactButton = $('<button type="button" class="btn btn-success add_contacts_link">Ajouter un contact</button>');
					var $newLinkLi4 = $('<li></li>').append($addContactButton);

					$collectionHolderOrganisateuriContactj.append($newLinkLi4);

					// on commence à compter à 1 et pas à 0 d'où le +1 (différent de la page de création d'un événément)
					$collectionHolderOrganisateuriContactj.data('index', ($collectionHolderOrganisateuriContactj.find(':input').length-1)/4+1);

					 // on récupère la <div> juste avant le ul.contact qui contient l'indice dans l'id
					var $preceding = $collectionHolderOrganisateuriContactj.prev();

					// on récupère le input dans le div

					var $input = $preceding.find('input');

					// il y a deux nombres dans l'id de l'input et l'indice qui nous faut est le second
					//var $array = /\d+/g.exec($input.attr('id'));
					var $array = $input.attr('id').match(/\d+/g);
					console.log("test40");
					console.log($array);
					console.log($input);
					console.log($array);
					var $indexOrga = $array[1];
					console.log("test41");
					tabUlContacts.push($collectionHolderOrganisateuriContactj);
					tabButtonContacts.push($addContactButton);
					tabIndexOrganisateurContacts.push($indexOrga);
					tabLinkContacts.push($newLinkLi4);
					
				}

				console.log("test2");

				tabOrganisateursUlContacts.push(tabUlContacts);
				tabOrganisateursButtonContacts.push(tabButtonContacts);
				tabOrganisateursIndexOrganisateurContacts.push(tabIndexOrganisateurContacts);
				tabOrganisateursLinkContacts.push(tabLinkContacts);

				// on reprend le traitement des organisateurs

				// on enlève les input qui sont lié aux contacts
				var calcIndex = $collectionHolderOrganisateuri.find('input').length - $collectionHolderOrganisateuriContact.find('input').length;
				
				// Il semblerait que cela n'est pas pris en compte les boutons dans calcIndex , il reste à 
				// donc à diviser par le nombre de champs d'un formulaire organisateur (4)
				// il faut addition 1 car l'indice commence à partir de 1 et non de 0
				calcIndex = calcIndex /4 +1;
				console.log("calcIndex : ");
				console.log(calcIndex);
				console.log($collectionHolderOrganisateuri.find('input').length);
				console.log($collectionHolderOrganisateuriContact.find('input').length);

				$collectionHolderOrganisateuri.data('index',calcIndex);

				// on récupère la <div> juste après le ul.organisateur qui contient l'indice dans l'id
				var $following = $collectionHolderOrganisateuri.next();

				console.log($following);


				// on récupère le input dans le div
				var $input = $following.find('input');

				// Il n'y a que un nombre dans l'attribut id qui est l'indice qu'on cherche
				var $array = /\d+/g.exec($input.attr('id'));

				var $indexEvenement = $array[0];
				tabUlOrganisateurs.push($collectionHolderOrganisateuri);
				tabButtonOrganisateurs.push($addOrgaButton);
				tabIndexEvenementOrganisateurs.push($indexEvenement);
				tabLinkOrganisateurs.push($newLinkLi3);

				console.log("test4");

			}
			console.log("test41");

			// on va faire pour les périodes maintenant

			var $collectionHolderPeriode = $('ul.periodes');

			var tabUlPeriodes = [];
			var tabButtonPeriodes = [];
			var tabIndexEvenementPeriodes = [];
			var tabLinkPeriodes = [];

			// on commence à 1 et pas à 0 pour la même raison que les organisateurs
			for(var i =start ; i< $collectionHolderPeriode.length ; i++)
			{
				var $collectionHolderPeriodei = $('ul.periodes:eq('+i+')');

				var $addPeriodeButton = $('<button type="button" class="btn btn-success add_periode_link">Ajouter une période</button>');
                var $newLinkLi2 = $('<li></li>').append($addPeriodeButton);

				$collectionHolderPeriodei.append($newLinkLi2);

				//var calcIndex = $collectionHolderPeriodei.find('input').length ;
				//calcIndex = calcIndex/5 +1;

				var calcIndex = $collectionHolderPeriodei.children('fieldset').length ;
				calcIndex = calcIndex +1;

				console.log(calcIndex);

				$collectionHolderPeriodei.data('index',calcIndex);

				// on récupère la <div> juste après le ul.organisateur qui contient l'indice dans l'id
				// le ul.organisateur est juste après le ul.periode
				var $following = $collectionHolderPeriodei.next().next();

				console.log("j'en ai trop marre des ces bidouillages que je fais parce que je code mal ");
				console.log($following);


				// on récupère le input dans le div
				var $input = $following.find('input');

				// Il n'y a que un nombre dans l'attribut id qui est l'indice qu'on cherche
				var $array = /\d+/g.exec($input.attr('id'));

				var $indexEvenement = $array[0];
				tabUlPeriodes.push($collectionHolderPeriodei);
				tabButtonPeriodes.push($addPeriodeButton);
				tabIndexEvenementPeriodes.push($indexEvenement);
				tabLinkPeriodes.push($newLinkLi2);
			}

			/////////////////////////////////////////////////////////
			// on va faire pour les questions maintenant

			var $collectionHolderQuestion = $('ul.questions');

			var tabUlQuestion = [];
			var tabButtonQuestion = [];
			var tabIndexEvenementQuestion = [];
			var tabLinkQuestion = [];

			var tabQuestionsUlReponses = [[]];
			var tabQuestionsButtonReponses = [[]];
			var tabQuestionsIndexQuestionReponses = [[]];
			var tabQuestionsLinkReponses = [[]];

			// on commence à 1 et pas à 0 pour la même raison que les organisateurs
			for(var i =start ; i< $collectionHolderQuestion.length ; i++)
			{
				var $collectionHolderQuestioni = $('ul.questions:eq('+i+')');

				var $addQuestionButton = $('<button type="button" class="btn btn-success add_question_link">Ajouter une Question</button>');
                var $newLinkLiQuestion = $('<li></li>').append($addQuestionButton);

				$collectionHolderQuestioni.append($newLinkLiQuestion);

				//---------------------------

				// on va s'occuper des questions

				console.log("test1");
				var tabUlReponses = [];
				var tabButtonReponses = [];
				var tabIndexQuestionReponses = [];
				var tabLinkReponses = [];

				var $collectionHolderQuestioniReponses = $collectionHolderQuestioni.find('ul.reponses')

				for(var j=0 ; j<$collectionHolderQuestioniReponses.length ; j++)
				{
					var $collectionHolderQuestioniReponsesj = $('ul.questions:eq('+i+') ul.reponses:eq('+j+')');

					var $addReponseButton = $('<button type="button" class="btn btn-success add_reponses_link">Ajouter une réponse</button>');
					var $newLinkLiReponse = $('<li></li>').append($addReponseButton);

					$collectionHolderQuestioniReponsesj.append($newLinkLiReponse);

					// on commence à compter à 1 et pas à 0 d'où le +1 (différent de la page de création d'un événément)
					$collectionHolderQuestioniReponsesj.data('index', ($collectionHolderQuestioniReponsesj.find(':input').length-1)+1);

					 // on récupère la <div> juste avant le ul.contact qui contient l'indice dans l'id
					var $preceding = $collectionHolderQuestioniReponsesj.prev();

					// on récupère le input dans le div

					var $input = $preceding.find('input');
					console.log('test modif article');
					console.log($input);

					// il y a deux nombres dans l'id de l'input et l'indice qui nous faut est le second
					//var $array = /\d+/g.exec($input.attr('id'));
					var $array = $input.attr('id').match(/\d+/g);
					console.log("test40");
					console.log($array);
					console.log($input);
					console.log($array);
					var $indexQuestion = $array[1];
					console.log("test41");
					tabUlReponses.push($collectionHolderQuestioniReponsesj);
					tabButtonReponses.push($addReponseButton);
					tabIndexQuestionReponses.push($indexQuestion);
					tabLinkReponses.push($newLinkLiReponse);
					
				}

				console.log("test2");

				tabQuestionsUlReponses.push(tabUlReponses);
				tabQuestionsButtonReponses.push(tabButtonReponses);
				tabQuestionsIndexQuestionReponses.push(tabIndexQuestionReponses);
				tabQuestionsLinkReponses.push(tabLinkReponses);

				// on reprend le traitement des questions

				// on enlève les input qui sont lié aux réponses
				var calcIndex = $collectionHolderQuestioni.find('input').length - $collectionHolderQuestioniReponses.find('input').length;
				
				// Il semblerait que cela n'est pas pris en compte les boutons dans calcIndex , il reste à 
				// donc à diviser par le nombre de champs d'un formulaire question (4)
				// il faut addition 1 car l'indice commence à partir de 1 et non de 0
				calcIndex = calcIndex  +1;
				console.log("calcIndex : ");
				console.log(calcIndex);
				//console.log($collectionHolderQuestioni.find('input').length);
				//console.log($collectionHolderOrganisateuriContact.find('input').length);

				$collectionHolderQuestioni.data('index',calcIndex);

				// on récupère la <div> juste après le ul.organisateur qui contient l'indice dans l'id
				var $following = $collectionHolderQuestioni.next().next().next();

				console.log($following);


				// on récupère le input dans le div
				var $input = $following.find('input');
				console.log($input);

				// Il n'y a que un nombre dans l'attribut id qui est l'indice qu'on cherche
				var $array = /\d+/g.exec($input.attr('id'));

				var $indexEvenement = $array[0];
				console.log('indexEvenement = '+$indexEvenement);
				tabUlQuestion.push($collectionHolderQuestioni);
				tabButtonQuestion.push($addQuestionButton);
				tabIndexEvenementQuestion.push($indexEvenement);
				tabLinkQuestion.push($newLinkLiQuestion);

				console.log("test4");

				//---------------------------

				//var calcIndex = $collectionHolderPeriodei.find('input').length ;
				//calcIndex = calcIndex/5 +1;

				/*var calcIndex = $collectionHolderQuestioni.children('fieldset').length ;
				calcIndex = calcIndex +1;

				console.log(calcIndex);

				$collectionHolderQuestioni.data('index',calcIndex);

				// on récupère la <div> juste après le ul.periode qui contient l'indice dans l'id
				// le ul.periode est juste après le ul.questions
				var $following = $collectionHolderQuestioni.next().next();

				console.log("j'en ai trop marre des ces bidouillages que je fais parce que je code mal ");
				console.log($following);


				// on récupère le input dans le div
				var $input = $following.find('input');

				// Il n'y a que un nombre dans l'attribut id qui est l'indice qu'on cherche
				var $array = /\d+/g.exec($input.attr('id'));

				var $indexEvenement = $array[0];
				tabUlQuestion.push($collectionHolderQuestioni);
				tabButtonQuestion.push($addQuestionButton);
				tabIndexEvenementQuestion.push($indexEvenement);
				tabLinkQuestion.push($newLinkLiQuestion);*/
			}
			

			/////////////////////////////////////////////////////////

			// On va s'occuper des clicks sur les boutons ajout organisateur

			tabButtonOrganisateurs.forEach( function (evenement) {

				evenement.on('click',function(e) {

					var index = tabButtonOrganisateurs.indexOf(evenement);

					console.log("tttttteeeeeeeessssssssssssssssttttttttttt  !!!");
					console.log(tabIndexEvenementOrganisateurs[index]);
					console.log(tabUlOrganisateurs[index]);
					console.log(tabUlOrganisateurs[index].data('index'));

					addSubFormEvent(tabUlOrganisateurs[index],tabLinkOrganisateurs[index],tabIndexEvenementOrganisateurs[index]);

					var $collectionHolder4 = $('ul.contacts:eq(0)').clone();
					// on vide ce qu'il pouvait y avoir dedans
					$collectionHolder4.empty();

					var $addContactButton = $('<button type="button" class="btn btn-success add_contacts_link">Ajouter un contact</button>');
					var $newLinkLi4 = $('<li></li>').append($addContactButton);

					$collectionHolder4.append($newLinkLi4);

					// on recupère le lien ajout organisateur
					//var $lienOrga = $('li:nth-last-child(1)',$collectionHolder3);
					var $lienOrga = tabUlOrganisateurs[index].find('li:last');
					console.log('---------------------------------- \n');
					console.log($lienOrga);
					$lienOrga.before($collectionHolder4);

					$collectionHolder4.append($('<br><br><br>'));
					$collectionHolder4.data('index', $collectionHolder4.find(':input').length);

					var $indexOrga = tabUlOrganisateurs[index].data('index')-1;

					$addContactButton.on('click',function(e){

						addSubFormEventSubFormOrga($collectionHolder4,$newLinkLi4,$indexOrga,tabIndexEvenementOrganisateurs[index]);

					})

				})

			});
			

			//On va s'occuper des clicks sur les boutons ajout contact
			console.log("test42");
			console.log(tabOrganisateursUlContacts,tabOrganisateursLinkContacts,tabOrganisateursIndexOrganisateurContacts,tabIndexEvenementOrganisateurs);

			tabOrganisateursButtonContacts.forEach( function (evenement){ 

				var i = tabOrganisateursButtonContacts.indexOf(evenement);
				i = i-1;

				evenement.forEach( function (evenement2) {

					var j = evenement.indexOf(evenement2);

					evenement2.on('click',function(e){

						//console.log(tabOrganisateursUlContacts[i][j])// ,tabOrganisateursLinkContacts[i][j] , tabOrganisateursIndexOrganisateurContacts[i][j] , tabIndexEvenementOrganisateurs[i]);
						addSubFormEventSubFormOrga(tabOrganisateursUlContacts[i][j] ,tabOrganisateursLinkContacts[i][j] , tabOrganisateursIndexOrganisateurContacts[i][j] , tabIndexEvenementOrganisateurs[i]  );

					});

				});

			});


			// on va s'occuper des clicks sur les boutons ajout periode

			tabButtonPeriodes.forEach(function(evenement) {
				
				evenement.on('click',function(e){

					var index = tabButtonPeriodes.indexOf(evenement);

					addSubFormEvent(tabUlPeriodes[index],tabLinkPeriodes[index],tabIndexEvenementPeriodes[index]);
					
				});

			});

			// on va s'occuper des clicks sur les boutons ajout questions
			console.log("test 1");
			tabButtonQuestion.forEach(function(evenement) {
				
				/*evenement.on('click',function(e){
					console.log("test 2");
					var index = tabButtonQuestion.indexOf(evenement);
					console.log(index);
					addSubFormEvent(tabUlQuestion[index],tabLinkQuestion[index],tabIndexEvenementQuestion[index]);
					
				});*/

				//--------------------------------------------------------------

				evenement.on('click',function(e) {

					var index = tabButtonQuestion.indexOf(evenement);

					/*console.log("tttttteeeeeeeessssssssssssssssttttttttttt  !!!");
					console.log(tabIndexEvenementOrganisateurs[index]);
					console.log(tabUlOrganisateurs[index]);
					console.log(tabUlOrganisateurs[index].data('index'));*/

					addSubFormEvent(tabUlQuestion[index],tabLinkQuestion[index],tabIndexEvenementQuestion[index]);

					var $collectionHolder4 = $('ul.reponses:eq(0)').clone();
					// on vide ce qu'il pouvait y avoir dedans
					$collectionHolder4.empty();

					var $addReponseButton = $('<button type="button" class="btn btn-success add_reponses_link">Ajouter une réponse</button>');
					var $newLinkLi4 = $('<li></li>').append($addReponseButton);

					$collectionHolder4.append($newLinkLi4);

					// on recupère le lien ajout organisateur
					//var $lienOrga = $('li:nth-last-child(1)',$collectionHolder3);
					var $lienQuestion = tabUlQuestion[index].find('li:last');
					//console.log('---------------------------------- \n');
					//console.log($lienOrga);
					$lienQuestion.before($collectionHolder4);

					$collectionHolder4.append($('<br><br><br>'));
					$collectionHolder4.data('index', $collectionHolder4.find(':input').length);

					var $indexQuestion = tabUlQuestion[index].data('index')-1;

					$addReponseButton.on('click',function(e){

						addSubFormEventSubFormQuestion($collectionHolder4,$newLinkLi4,$indexQuestion,tabIndexEvenementQuestion[index]);
						

					})

				})

				//----------------------------------------------------------------

			});

			//On va s'occuper des clicks sur les boutons ajout réponse

			tabQuestionsButtonReponses.forEach( function (evenement){ 

				var i = tabQuestionsButtonReponses.indexOf(evenement);
				// je ne sais pas pk , mais il faut soustraire 1 à i
				i = i-1;

				evenement.forEach( function (evenement2) {

					var j = evenement.indexOf(evenement2);

					evenement2.on('click',function(e){

						//console.log(tabOrganisateursUlContacts[i][j])// ,tabOrganisateursLinkContacts[i][j] , tabOrganisateursIndexOrganisateurContacts[i][j] , tabIndexEvenementOrganisateurs[i]);
						console.log('que passa ?');
						console.log(tabIndexEvenementQuestion[i]);
						console.log(tabIndexEvenementQuestion)
						console.log(i);
						addSubFormEventSubFormQuestion(tabQuestionsUlReponses[i][j] ,tabQuestionsLinkReponses[i][j] , tabQuestionsIndexQuestionReponses[i][j] , tabIndexEvenementQuestion[i]  );

					});

				});

			});



			// *******************
			
			$addEvenementButton.on('click', function(e) {
                // add a new periode form (see next code block)
                addForm($collectionHolder, $newLinkLi);

				var $collectionHolder2 = $('ul.periodes:eq(0)').clone();
				var $collectionHolder3 = $('ul.organisateurs:eq(0)').clone();
				var $collectionHolderQuestion = $('ul.questions:eq(0)').clone();
                // on supprime les formulaires periodes et le bouton
                //$collectionHolder2.find('li').remove();

				// on va vider ce qu'il y a à l'intérieur des ul
				$collectionHolder2.empty();
				$collectionHolder3.empty();
				$collectionHolderQuestion.empty();
 
 
            

                var $addPeriodeButton = $('<button type="button" class="btn btn-success add_periode_link">Ajouter une période</button>');
                var $newLinkLi2 = $('<li></li>').append($addPeriodeButton);

				var $addOrganisateurButton = $('<button type="button" class="btn btn-success add_organisateur_link">Ajouter un organisateur</button>');
                var $newLinkLi3 = $('<li></li>').append($addOrganisateurButton);

				var $addQuestionButton = $('<button type="button" class="btn btn-success add_question_link">Ajouter une question</button>');
                var $newLinkLiQuestion = $('<li></li>').append($addQuestionButton);
                
                $collectionHolder2.append($newLinkLi2);
				$collectionHolder3.append($newLinkLi3);
				$collectionHolderQuestion.append($newLinkLiQuestion);
                // on recupère le le lien ajout organisateur
                var $lienEvent = $('ul.evenements > li:nth-last-child(1)');

                // on rajoute les liens d'ajout avant le lien ajout organisateur
				$lienEvent.before($collectionHolderQuestion);
                $lienEvent.before($collectionHolder2);
				$lienEvent.before($collectionHolder3);
                $collectionHolder2.append($('<br><br><br>'));
				$collectionHolder3.append($('<br><br><br>'));
				$collectionHolderQuestion.append($('<br><br><br>'));
                $collectionHolder2.data('index', $collectionHolder2.find(':input').length);
				$collectionHolder3.data('index', $collectionHolder3.find(':input').length); // cette ligne a été modifié $collectionHolder3.find(':input') été avant $collectionHolder2.find(':input') 
                $collectionHolderQuestion.data('index', $collectionHolderQuestion.find(':input').length);

                var $indexEvent = $collectionHolder.data('index')-1;

				// on rajoute une période à remplir au minimum
				addSubFormEvent($collectionHolder2,$newLinkLi2,$indexEvent);

				// on rajoute un organisateur à remplir au 
				
				addSubFormEvent($collectionHolder3,$newLinkLi3,$indexEvent);

				var $collectionHolder42 = $('ul.contacts:eq(0)').clone();
				// on va vider ce qu'il pouvait y avoir dedans
				$collectionHolder42.empty();

				var $addContactButton2 = $('<button type="button" class="btn btn-success add_contacts_link">Ajouter un contact</button>');
            	var $newLinkLi42 = $('<li></li>').append($addContactButton2);

				$collectionHolder42.append($newLinkLi42);

				// on recupère le lien ajout organisateur
                //var $lienOrga = $('li:nth-last-child(1)',$collectionHolder3);
				var $lienOrga2 = $collectionHolder3.find('li:last');
				console.log('---------------------------------- \n');
				console.log($lienOrga2);
				$lienOrga2.before($collectionHolder42);

				$collectionHolder42.append($('<br><br><br>'));
                $collectionHolder42.data('index', $collectionHolder42.find(':input').length);

				var $indexOrga2 = $collectionHolder3.data('index')-1;

				$addContactButton2.on('click',function(e){

                	addSubFormEventSubFormOrga($collectionHolder42,$newLinkLi42,$indexOrga2,$indexEvent);

                })


				// on rajoute les questions prédifini du formulaire de satisfaction

				addEventStartQuestion($collectionHolderQuestion,$newLinkLiQuestion,$indexEvent,"Comment définiriez-vous cette action ?");
				addEventStartQuestionAddReponse($collectionHolderQuestion,$indexEvent)
				addEventStartQuestion($collectionHolderQuestion,$newLinkLiQuestion,$indexEvent,"Quels en ont été les temps forts ?");
				addEventStartQuestionAddReponse($collectionHolderQuestion,$indexEvent)
				addEventStartQuestion($collectionHolderQuestion,$newLinkLiQuestion,$indexEvent,"Y a-t-il eu des points faibles ? Lesquels ?");
				addEventStartQuestionAddReponse($collectionHolderQuestion,$indexEvent)
				addEventStartQuestion($collectionHolderQuestion,$newLinkLiQuestion,$indexEvent,"Quelles sont vos suggestions ? ");
				addEventStartQuestionAddReponse($collectionHolderQuestion,$indexEvent)
				addEventStartQuestion($collectionHolderQuestion,$newLinkLiQuestion,$indexEvent,"Remarques éventuelles");
				addEventStartQuestionAddReponse($collectionHolderQuestion,$indexEvent)
				addEventStartQuestion($collectionHolderQuestion,$newLinkLiQuestion,$indexEvent,"Souhaiteriez-vous être associé-e à un dispositif comparable l’année suivante ?");
				addEventStartQuestionAddReponse($collectionHolderQuestion,$indexEvent)
				addEventStartQuestion($collectionHolderQuestion,$newLinkLiQuestion,$indexEvent,"Quel est votre sexe ?");
				addEventStartQuestionAddReponse($collectionHolderQuestion,$indexEvent)
				addEventStartQuestion($collectionHolderQuestion,$newLinkLiQuestion,$indexEvent,"À quel tranche d'âge appartenez-vous ?");
				addEventStartQuestionAddReponse($collectionHolderQuestion,$indexEvent)
				addEventStartQuestion($collectionHolderQuestion,$newLinkLiQuestion,$indexEvent,"Quel est votre département de scolarité ou d'étude ?");
				addEventStartQuestionAddReponse($collectionHolderQuestion,$indexEvent)
                
                $addPeriodeButton.on('click',function(e){

                        addSubFormEvent($collectionHolder2,$newLinkLi2,$indexEvent);

                })

				$addOrganisateurButton.on('click',function(e){

                        addSubFormEvent($collectionHolder3,$newLinkLi3,$indexEvent);

						var $collectionHolder4 = $('ul.contacts:eq(0)').clone();
						// on va vider ce qu'il pouvait y avoir dedans
						$collectionHolder4.empty();

						var $addContactButton = $('<button type="button" class="btn btn-success add_contacts_link">Ajouter un contact</button>');
                		var $newLinkLi4 = $('<li></li>').append($addContactButton);

						$collectionHolder4.append($newLinkLi4);

						// on recupère le lien ajout organisateur
                		//var $lienOrga = $('li:nth-last-child(1)',$collectionHolder3);
						var $lienOrga = $collectionHolder3.find('li:last');
						console.log('---------------------------------- \n');
						console.log($lienOrga);
						$lienOrga.before($collectionHolder4);

						$collectionHolder4.append($('<br><br><br>'));
                		$collectionHolder4.data('index', $collectionHolder4.find(':input').length);

						var $indexOrga = $collectionHolder3.data('index')-1;

						$addContactButton.on('click',function(e){

                        addSubFormEventSubFormOrga($collectionHolder4,$newLinkLi4,$indexOrga,$indexEvent);

                		})


                })

				$addQuestionButton.on('click',function(e){

						console.log('test 36000');
                        addSubFormEvent($collectionHolderQuestion,$newLinkLiQuestion,$indexEvent);
						console.log('test 36001');

						//---------------------------------------

						var $collectionHolder4 = $('ul.reponses:eq(0)').clone();
						// on va vider ce qu'il pouvait y avoir dedans
						$collectionHolder4.empty();
						console.log($collectionHolder4);
						console.log($collectionHolderQuestion);

						var $addReponseButton = $('<button type="button" class="btn btn-success add_reponses_link">Ajouter une réponse</button>');
                		var $newLinkLi4 = $('<li></li>').append($addReponseButton);

						$collectionHolder4.append($newLinkLi4);

						// on recupère le lien ajout organisateur
                		//var $lienOrga = $('li:nth-last-child(1)',$collectionHolder3);
						var $lienQuestion = $collectionHolderQuestion.find('li:last');
						//console.log('---------------------------------- \n');
						//console.log($lienOrga);
						$lienQuestion.before($collectionHolder4);

						$collectionHolder4.append($('<br><br><br>'));
                		$collectionHolder4.data('index', $collectionHolder4.find(':input').length);

						var $indexQuestion = $collectionHolderQuestion.data('index')-1;

						$addReponseButton.on('click',function(e){

                        addSubFormEventSubFormQuestion($collectionHolder4,$newLinkLi4,$indexQuestion,$indexEvent);

						

                		})
						//---------------------------------------
				});

				/*console.log('làààààààààààààààààà');
				console.log($collectionHolder);
				console.log($newLinkLi);
				$collectionHolder.find('> ul:eq(0) , > ul:eq(1) , > ul:eq(2) ').wrapAll($('<div class = "new"> </div>'));
				console.log($collectionHolder.find('> li:nth-last-child(1)').prev().prev());
				console.log($collectionHolder.find('> li:nth-last-child(1)').prev());
				$collectionHolder.find('> li:nth-last-child(1)').prev().prepend($collectionHolder.find('> li:nth-last-child(1)').prev().prev());
				console.log($collectionHolder.find('> div:last-child'));
				console.log($collectionHolder.find('> li:last-child').prev());
				console.log('sérieu ?');
				addTagFormDeleteLink($collectionHolder.find('> li:last-child').prev());*/
            });

			
			console.log('iciiiiiiiiiiiiii');
			console.log($collectionHolder);
			/*$collectionHolder.find('ul.questions').each(function(){
				$collectionHolder.find('> div.form-group:eq(0) , > div.form-group:eq(1) , > div.form-group:eq(2) , > div.form-group:eq(3) , > ul:eq(0) , > ul:eq(1) , > ul:eq(2) , > fieldset:eq(0) ').wrapAll($('<div class = "new"> </div>'));
			});

			$collectionHolder.find('div.new').each(function() {
                console.log($(this));
                addTagFormDeleteLink($(this));
            });*/
		

		});

		function addForm($collectionHolder, $newLinkLi) {
            // Get the data-prototype explained earlier
            var prototype = $collectionHolder.data('prototype');
            //console.log($collectionHolder.data('index'));
            //console.log(prototype);

            // get the new index
            var index = $collectionHolder.data('index');
			
            var newForm = prototype;
			
            // You need this only if you didn't set 'label' => false in your tags field in TaskType
            // Replace '__name__label__' in the prototype's HTML to
            // instead be a number based on how many items we have
            // newForm = newForm.replace(/__name__label__/g, index);

            // Replace '__name__' in the prototype's HTML to
            // instead be a number based on how many items we have
            newForm = newForm.replace(/__name__/g, index);

            /* console.log('::::::::::::\n');
            console.log($collectionHolder.data('prototype'));*/

            // increase the index with one for the next item
            $collectionHolder.data('index', index + 1);

            // Display the form in the page in an li, before the "Add a tag" link li
            var $newFormLi = $('<li></li>').append(newForm);
            $newLinkLi.before($newFormLi);
        }

		function addSubFormEvent($collectionHolder, $newLinkLi,$indexEvent) {
            // Get the data-prototype explained earlier
            var prototype = $collectionHolder.data('prototype');
            //console.log($collectionHolder.data('index'));
            console.log(prototype);

            // get the new index
            var index = $collectionHolder.data('index');

            var newForm = prototype;
            // You need this only if you didn't set 'label' => false in your tags field in TaskType
            // Replace '__name__label__' in the prototype's HTML to
            // instead be a number based on how many items we have
            // newForm = newForm.replace(/__name__label__/g, index);

            // Replace '__name__' in the prototype's HTML to
            // instead be a number based on how many items we have
            newForm = newForm.replace(/__name__/g, index);
			console.log('//////////////////////////\n');
			console.log(newForm);
            
            //on va lier avec les regex au bon prototype organisateur
            newForm=newForm.replace(/evenements_\d*/g,"evenements_"+$indexEvent);
            newForm=newForm.replace(/evenements\]\[\d*/g,"evenements]["+$indexEvent);
            console.log('?????????????????????????????????????\n');
            console.log(newForm);

            // increase the index with one for the next item
            $collectionHolder.data('index', index + 1);

            // Display the form in the page in an li, before the "Add a tag" link li
            var $newFormLi = $('<li></li>').append(newForm);
            $newLinkLi.before($newFormLi);
        }

		function addSubFormEventSubFormOrga($collectionHolder, $newLinkLi,$indexOrga,$indexEvent) {
            // Get the data-prototype explained earlier
            var prototype = $collectionHolder.data('prototype');
            //console.log($collectionHolder.data('index'));
            console.log(prototype);

            // get the new index
            var index = $collectionHolder.data('index');

            var newForm = prototype;
            // You need this only if you didn't set 'label' => false in your tags field in TaskType
            // Replace '__name__label__' in the prototype's HTML to
            // instead be a number based on how many items we have
            // newForm = newForm.replace(/__name__label__/g, index);

            // Replace '__name__' in the prototype's HTML to
            // instead be a number based on how many items we have
            newForm = newForm.replace(/__name__/g, index);
			console.log('//////////////////////////\n');
			console.log(newForm);

			newForm=newForm.replace(/evenements_\d*/g,"evenements_"+$indexEvent);
            newForm=newForm.replace(/evenements\]\[\d*/g,"evenements]["+$indexEvent);

            
            //on va lier avec les regex au bon prototype organisateur
            newForm=newForm.replace(/organisateurs_\d*/g,"organisateurs_"+$indexOrga);
            newForm=newForm.replace(/organisateurs\]\[\d*/g,"organisateurs]["+$indexOrga);
            console.log('?????????????????????????????????????\n');
            console.log(newForm);

            // increase the index with one for the next item
            $collectionHolder.data('index', index + 1);

            // Display the form in the page in an li, before the "Add a tag" link li
            var $newFormLi = $('<li></li>').append(newForm);
            $newLinkLi.before($newFormLi);
        }

		function addSubFormEventSubFormQuestion($collectionHolder, $newLinkLi,$indexOrga,$indexEvent) {
            // Get the data-prototype explained earlier
            var prototype = $collectionHolder.data('prototype');
            //console.log($collectionHolder.data('index'));
            console.log(prototype);

            // get the new index
            var index = $collectionHolder.data('index');

            var newForm = prototype;
            // You need this only if you didn't set 'label' => false in your tags field in TaskType
            // Replace '__name__label__' in the prototype's HTML to
            // instead be a number based on how many items we have
            // newForm = newForm.replace(/__name__label__/g, index);

            // Replace '__name__' in the prototype's HTML to
            // instead be a number based on how many items we have
            newForm = newForm.replace(/__name__/g, index);
			console.log('//////////////////////////\n');
			console.log(newForm);

			newForm=newForm.replace(/evenements_\d*/g,"evenements_"+$indexEvent);
            newForm=newForm.replace(/evenements\]\[\d*/g,"evenements]["+$indexEvent);

            
            //on va lier avec les regex au bon prototype organisateur
            newForm=newForm.replace(/questions_\d*/g,"questions_"+$indexOrga);
            newForm=newForm.replace(/questions\]\[\d*/g,"questions]["+$indexOrga);
            console.log('?????????????????????????????????????\n');
            console.log(newForm);

            // increase the index with one for the next item
            $collectionHolder.data('index', index + 1);

            // Display the form in the page in an li, before the "Add a tag" link li
            var $newFormLi = $('<li></li>').append(newForm);
            $newLinkLi.before($newFormLi);
        }

		// cette fonction est la même addSubFormEvent , sauf qu'elle est appellé 
		//pour créer les questions prédifini et recoit donc un string en plus
		//et va créer un attribut value contenant le string dans le prototype
		//ne pas appeller cette fonction pour autre chose que les questions
		function addEventStartQuestion($collectionHolder, $newLinkLi,$indexEvent,$question) {
            // Get the data-prototype explained earlier
            var prototype = $collectionHolder.data('prototype');
            //console.log($collectionHolder.data('index'));
            console.log(prototype);

            // get the new index
            var index = $collectionHolder.data('index');

            var newForm = prototype;
            // You need this only if you didn't set 'label' => false in your tags field in TaskType
            // Replace '__name__label__' in the prototype's HTML to
            // instead be a number based on how many items we have
            // newForm = newForm.replace(/__name__label__/g, index);

            // Replace '__name__' in the prototype's HTML to
            // instead be a number based on how many items we have
            newForm = newForm.replace(/__name__/g, index);
			console.log('//////////////////////////\n');
			console.log(newForm);
            
            //on va lier avec les regex au bon prototype organisateur
            newForm=newForm.replace(/evenements_\d*/g,"evenements_"+$indexEvent);
            newForm=newForm.replace(/evenements\]\[\d*/g,"evenements]["+$indexEvent);
            console.log('?????????????????????????????????????\n');
            console.log(newForm);

			//on insérer la question
			//newForm.attr('value',$question);
			//newForm.setAttribute('value',$question);

			console.log($(newForm+' :input'));
			console.log($('#form_article_evenements_'+$indexEvent+'_questions_'+index));
			$(newForm+' :input').attr('value',$question);
			var sel = $(newForm);		
			console.log(sel);
			console.log(sel[0]['firstChild']['children'][1]);	
			//sel.attr('value',$question);
			$(sel[0]['firstChild']['children'][1]).attr('value',$question);
			
			console.log('================================');
			console.log(sel);
			console.log(newForm);
            // increase the index with one for the next item
            $collectionHolder.data('index', index + 1);

            // Display the form in the page in an li, before the "Add a tag" link li
            var $newFormLi = $('<li></li>').append(sel);
            $newLinkLi.before($newFormLi);
        }

		function addEventStartQuestionAddReponse($collectionHolderQuestion,$indexEvent)
		{
			var $collectionHolder4 = $('ul.reponses:eq(0)').clone();
			// on va vider ce qu'il pouvait y avoir dedans
			$collectionHolder4.empty();
			console.log($collectionHolder4);
			console.log($collectionHolderQuestion);

			var $addReponseButton = $('<button type="button" class="btn btn-success add_reponses_link">Ajouter une réponse</button>');
        	var $newLinkLi4 = $('<li></li>').append($addReponseButton);

			$collectionHolder4.append($newLinkLi4);

			// on recupère le lien ajout organisateur
            //var $lienOrga = $('li:nth-last-child(1)',$collectionHolder3);
			var $lienQuestion = $collectionHolderQuestion.find('li:last');
			//console.log('---------------------------------- \n');
			//console.log($lienOrga);
			$lienQuestion.before($collectionHolder4);

			$collectionHolder4.append($('<br><br><br>'));
            $collectionHolder4.data('index', $collectionHolder4.find(':input').length);

			var $indexQuestion = $collectionHolderQuestion.data('index')-1;

			$addReponseButton.on('click',function(e){

            	addSubFormEventSubFormQuestion($collectionHolder4,$newLinkLi4,$indexQuestion,$indexEvent);

            })
		}

		function addTagFormDeleteLink ($newFormLi)
        {
            var $removeFormButton = $('<button type="button" class="btn btn-danger">Suppression</button>');
            $newFormLi.append($removeFormButton);
            $newFormLi.append($('<br> <br>'));

            $removeFormButton.on('click', function(e) {
                // remove the li for the tag form
                console.log($newFormLi);
                $newFormLi.remove();
                console.log($newFormLi);

                console.log($newFormLi);

            });
        }

	</script>


{% endblock body %}

